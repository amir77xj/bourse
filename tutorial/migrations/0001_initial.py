# Generated by Django 2.2.10 on 2020-03-17 04:00

import ckeditor.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import painless.upload_to


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TutorialBadge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('slug', models.SlugField(max_length=140, verbose_name='Slug')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
            ],
            options={
                'verbose_name': 'Tutorial Badge',
                'verbose_name_plural': 'Tutorial Badges',
            },
        ),
        migrations.CreateModel(
            name='TutorialCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('slug', models.SlugField(max_length=140, verbose_name='Slug')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
            ],
            options={
                'verbose_name': 'Tutorial Category',
                'verbose_name_plural': 'Tutorial Categories',
            },
        ),
        migrations.CreateModel(
            name='TutorialLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('slug', models.SlugField(max_length=140, verbose_name='Slug')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
            ],
            options={
                'verbose_name': 'Tutorial Level',
                'verbose_name_plural': 'Tutorial Levels',
            },
        ),
        migrations.CreateModel(
            name='TutorialPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120, verbose_name='Title')),
                ('slug', models.SlugField(max_length=140, verbose_name='Slug')),
                ('summary', models.CharField(max_length=254, verbose_name='Summary')),
                ('content', ckeditor.fields.RichTextField()),
                ('price', models.PositiveIntegerField(verbose_name='Price')),
                ('price_unit', models.CharField(choices=[('t', 'Toman'), ('r', 'Rial')], max_length=1, verbose_name='Price Unit')),
                ('duration', models.DurationField(verbose_name='Duration')),
                ('preview', models.FileField(blank=True, null=True, upload_to=painless.upload_to.tutorial_movie_directory_path, validators=[django.core.validators.FileExtensionValidator(['mp4'])], verbose_name='Preview')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tutorials', to='tutorial.TutorialBadge', verbose_name='Tutorial Badge')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tutorials', to='tutorial.TutorialCategory', verbose_name='Tutorial Category')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tutorials', to='tutorial.TutorialLevel', verbose_name='Tutorial Level')),
            ],
            options={
                'verbose_name': 'Tutorial Post',
                'verbose_name_plural': 'Tutorial Posts',
            },
        ),
        migrations.CreateModel(
            name='TutorialStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('slug', models.SlugField(max_length=140, verbose_name='Slug')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
            ],
            options={
                'verbose_name': 'Tutorial Status',
                'verbose_name_plural': 'Tutorial Status',
            },
        ),
        migrations.CreateModel(
            name='TutorialTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('slug', models.SlugField(max_length=140, verbose_name='Slug')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
            ],
            options={
                'verbose_name': 'Tutorial Tag',
                'verbose_name_plural': 'Tutorial Tags',
            },
        ),
        migrations.CreateModel(
            name='TutorialReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=254)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reviews', to=settings.AUTH_USER_MODEL, verbose_name='By user')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='tutorial.TutorialPost', verbose_name='Post')),
                ('reply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='review', to='tutorial.TutorialReview', verbose_name='reply')),
            ],
            options={
                'verbose_name': 'Tutorial Review',
                'verbose_name_plural': 'Tutorial Reviews',
            },
        ),
        migrations.AddField(
            model_name='tutorialpost',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tutorials', to='tutorial.TutorialStatus', verbose_name='Tutorial Status'),
        ),
        migrations.AddField(
            model_name='tutorialpost',
            name='tags',
            field=models.ManyToManyField(to='tutorial.TutorialTag', verbose_name='Tutorial Tags'),
        ),
        migrations.AddField(
            model_name='tutorialpost',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tutorials', to=settings.AUTH_USER_MODEL, verbose_name='Teacher'),
        ),
        migrations.CreateModel(
            name='TutorialPicture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120, verbose_name='Title')),
                ('height_field', models.SmallIntegerField(verbose_name='Height Field')),
                ('width_field', models.SmallIntegerField(verbose_name='Width Field')),
                ('picture', models.ImageField(height_field=models.SmallIntegerField(verbose_name='Height Field'), help_text='picture size: 525x350', max_length=254, upload_to=painless.upload_to.tutorial_directory_path, validators=[django.core.validators.FileExtensionValidator(['jpg', 'png'])], verbose_name='Picture', width_field=models.SmallIntegerField(verbose_name='Width Field'))),
                ('standard_size', models.CharField(choices=[('300x300', '300x300'), ('400x250', '400x250'), ('525x350', '525x350'), ('550x240', '550x240'), ('595x397', '595x397'), ('600x400', '600x400'), ('600x800', '600x800'), ('600x400', '600x400'), ('1920x1280', '1920x1280')], max_length=10, verbose_name='Standard Size')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('tutorial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pictures', to='tutorial.TutorialPost', verbose_name='Tutorial Post')),
            ],
            options={
                'verbose_name': 'Tutorial Picture',
                'verbose_name_plural': 'Tutorial Pictures',
            },
        ),
        migrations.CreateModel(
            name='TutorialMovie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120, verbose_name='Title')),
                ('movie', models.FileField(blank=True, null=True, upload_to=painless.upload_to.tutorial_movie_directory_path, validators=[django.core.validators.FileExtensionValidator(['mp4'])], verbose_name='Movie')),
                ('duration', models.DurationField(verbose_name='Duration')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('tutorial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movies', to='tutorial.TutorialPost', verbose_name='Tutorial Post')),
            ],
            options={
                'verbose_name': 'Tutorial Movie',
                'verbose_name_plural': 'Tutorial Movies',
            },
        ),
    ]
