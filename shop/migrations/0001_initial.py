# Generated by Django 2.2.10 on 2020-04-25 02:09

import ckeditor_uploader.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import painless.upload_to


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=120, verbose_name='Title')),
                ('slug', models.SlugField(editable=False, max_length=140, verbose_name='Slug')),
                ('summary', models.CharField(max_length=254, verbose_name='Summary')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Content')),
                ('price', models.PositiveIntegerField(verbose_name='Price')),
                ('price_unit', models.CharField(choices=[('t', 'Toman'), ('r', 'Rial')], max_length=1, verbose_name='Price Unit')),
                ('duration', models.DurationField(verbose_name='Duration')),
                ('available', models.BooleanField(default=True, verbose_name='Available')),
                ('preview', models.FileField(blank=True, null=True, upload_to=painless.upload_to.product_movie_directory_path, validators=[django.core.validators.FileExtensionValidator(['mp4'])], verbose_name='Preview')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
            ],
            options={
                'verbose_name': 'Product Post',
                'verbose_name_plural': 'Product Posts',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='ProductBadge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('slug', models.SlugField(editable=False, max_length=140, verbose_name='Slug')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
            ],
            options={
                'verbose_name': 'Product Badge',
                'verbose_name_plural': 'Product Badges',
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('slug', models.SlugField(editable=False, max_length=140, verbose_name='Slug')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
            ],
            options={
                'verbose_name': 'Product Category',
                'verbose_name_plural': 'Product Categories',
            },
        ),
        migrations.CreateModel(
            name='ProductLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('slug', models.SlugField(max_length=140, verbose_name='Slug')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
            ],
            options={
                'verbose_name': 'Product Level',
                'verbose_name_plural': 'Product Levels',
            },
        ),
        migrations.CreateModel(
            name='ProductStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('slug', models.SlugField(editable=False, max_length=140, verbose_name='Slug')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
            ],
            options={
                'verbose_name': 'Product Status',
                'verbose_name_plural': 'Product Status',
            },
        ),
        migrations.CreateModel(
            name='ProductTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('slug', models.SlugField(editable=False, max_length=140, verbose_name='Slug')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
            ],
            options={
                'verbose_name': 'Product Tag',
                'verbose_name_plural': 'Product Tags',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('amount', models.DecimalField(decimal_places=0, max_digits=10)),
                ('status', models.CharField(choices=[('p', 'Pending'), ('f', 'Failed'), ('c', 'Completed')], default='pending', max_length=1)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='shop.Invoice')),
            ],
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=254)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reviews', to=settings.AUTH_USER_MODEL, verbose_name='By user')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='shop.Product', verbose_name='Post')),
                ('reply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='review', to='shop.ProductReview', verbose_name='reply')),
            ],
            options={
                'verbose_name': 'Product Review',
                'verbose_name_plural': 'Product Reviews',
            },
        ),
        migrations.CreateModel(
            name='ProductPicture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120, verbose_name='Title')),
                ('height_field', models.SmallIntegerField(verbose_name='Height Field')),
                ('width_field', models.SmallIntegerField(verbose_name='Width Field')),
                ('picture', models.ImageField(height_field='height_field', help_text='picture size must be: 525x350', max_length=254, upload_to=painless.upload_to.product_directory_path, validators=[django.core.validators.FileExtensionValidator(['jpg', 'png'])], verbose_name='Picture', width_field='width_field')),
                ('standard_size', models.CharField(choices=[('300x300', '300x300'), ('400x250', '400x250'), ('525x350', '525x350'), ('550x240', '550x240'), ('595x397', '595x397'), ('600x400', '600x400'), ('600x800', '600x800'), ('600x400', '600x400'), ('1920x1280', '1920x1280')], max_length=10, verbose_name='Standard Size')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pictures', to='shop.Product', verbose_name='Product Post')),
            ],
            options={
                'verbose_name': 'Product Picture',
                'verbose_name_plural': 'Product Pictures',
            },
        ),
        migrations.CreateModel(
            name='ProductMovie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120, verbose_name='Title')),
                ('movie', models.FileField(blank=True, null=True, upload_to=painless.upload_to.product_movie_directory_path, validators=[django.core.validators.FileExtensionValidator(['mp4'])], verbose_name='Movie')),
                ('duration', models.DurationField(verbose_name='Duration')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movies', to='shop.Product', verbose_name='Product Post')),
            ],
            options={
                'verbose_name': 'Product Movie',
                'verbose_name_plural': 'Product Movies',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='badge',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='shop.ProductBadge', verbose_name='Product Badge'),
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='shop.ProductCategory', verbose_name='Product Category'),
        ),
        migrations.AddField(
            model_name='product',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='shop.ProductLevel', verbose_name='Product Level'),
        ),
        migrations.AddField(
            model_name='product',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='shop.ProductStatus', verbose_name='Product Status'),
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.ManyToManyField(to='shop.ProductTag', verbose_name='Product Tags'),
        ),
        migrations.AddField(
            model_name='product',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to=settings.AUTH_USER_MODEL, verbose_name='Teacher'),
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_price', models.DecimalField(decimal_places=0, max_digits=10)),
                ('product_count', models.PositiveIntegerField()),
                ('product_cost', models.DecimalField(decimal_places=0, max_digits=10)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='shop.Order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='shop.Product')),
            ],
        ),
        migrations.AddField(
            model_name='invoice',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='shop.Order'),
        ),
        migrations.AlterIndexTogether(
            name='product',
            index_together={('id', 'slug')},
        ),
    ]
